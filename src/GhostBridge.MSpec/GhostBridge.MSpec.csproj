<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{903A9C7F-4AC9-4D7A-BA6F-411DDE1B5521}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>GhostBridge.MSpec</RootNamespace>
    <AssemblyName>GhostBridge.MSpec</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="AntiXssLibrary, Version=4.2.0.0, Culture=neutral, PublicKeyToken=d127efab8a9c114f, processorArchitecture=MSIL">
			<ILMerge>True</ILMerge>
			<SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\lib\chutzpah\AntiXssLibrary.dll</HintPath>
    </Reference>
    <Reference Include="chutzpah, Version=2.3.0.208, Culture=neutral, PublicKeyToken=1ca802c37ffe1896, processorArchitecture=MSIL">
      <ILMerge>True</ILMerge>
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\lib\chutzpah\chutzpah.dll</HintPath>
    </Reference>
    <Reference Include="Machine.Specifications, Version=0.5.12.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\Machine.Specifications.0.5.12\lib\net40\Machine.Specifications.dll</HintPath>
    </Reference>
    <Reference Include="Machine.Specifications.Clr4, Version=0.5.12.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\Machine.Specifications.0.5.12\lib\net40\Machine.Specifications.Clr4.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="ServiceStack.Text, Version=3.8.3.0, Culture=neutral, PublicKeyToken=e5435b53251faa46, processorArchitecture=MSIL">
			<ILMerge>True</ILMerge>
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\lib\chutzpah\ServiceStack.Text.dll</HintPath>
    </Reference>
    <Reference Include="StructureMap, Version=2.6.3.0, Culture=neutral, PublicKeyToken=e60ad81abae3c223, processorArchitecture=MSIL">
			<ILMerge>True</ILMerge>
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\lib\chutzpah\StructureMap.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.IO.Compression.FileSystem" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="a_failing_chutzpah_test.cs" />
    <Compile Include="a_passing_chutzpah_test.cs" />
    <Compile Include="ChutzpahTestRun.cs" />
    <Compile Include="ChutzpahTestSetup.cs" />
    <Compile Include="Providers\CSharpSpecProvider.cs" />
    <Compile Include="MSBuildTask.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Providers\ProviderConfig.cs" />
    <Compile Include="Providers\SpecCodeProvider.cs" />
    <Compile Include="Providers\VisualBasicSpecProvider.cs" />
    <Compile Include="ChutzpahRunnerCallback.cs" />
    <Compile Include="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Tools\uninstall.ps1" />
    <None Include="Tools\install.ps1" />
    <Compile Include="with_chutzpah_test_runner.cs" />
    <None Include="runners.zip" />
    <None Include="GhostBridge.msbuild.targets">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Include="phantomjs.exe" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />
  <PropertyGroup>
    <ILMergeExecutable>"$(SolutionDir)lib\ILRepack\ilrepack"</ILMergeExecutable>
  </PropertyGroup>
  <Target Name="ILMerge" DependsOnTargets="Build" Inputs="@(IntermediateAssembly)" Outputs="@(MainAssembly -> '%(RelativeDir)%(Filename).ILMergeTrigger%(Extension)')">
    <CreateItem Include="@(ReferencePath)" Condition="'%(ReferencePath.ILMerge)'=='True'">
      <Output TaskParameter="Include" ItemName="ILMergeAssemblies" />
    </CreateItem>
    <Exec Command="$(ILMergeExecutable) /Closed /Internalize:$(ProjectDir)exclude.txt /Lib:@(OutputPath) /out:@(MainAssembly) &quot;@(IntermediateAssembly)&quot; @(ILMergeAssemblies->'&quot;%(FullPath)&quot;', ' ')" />
    <!-- Make a copy of the merged output DLL to use as a trigger for incremental builds -->
    <Copy SourceFiles="@(MainAssembly)" DestinationFiles="@(MainAssembly -> '%(RelativeDir)%(Filename)%(Extension)')" />
  </Target>
</Project>